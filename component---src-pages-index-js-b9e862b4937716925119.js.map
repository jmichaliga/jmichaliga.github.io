{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/iconlink.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","IconLink","_ref","href","icon","text","rel","src","height","width","alt","propTypes","PropTypes","string","defaultProps","Box","styled","div","_templateObject","space","fontSize","color","IndexPage","layout","seo","title","keywords","className","iconlink","mb","components_image","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-b9e862b4937716925119.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst IconLink = ({ href, icon, text }) => (\n  <a href={href} rel=\"external\">\n    <img src=\"./images/twitter.svg\" height=\"24\" width=\"24\" alt={icon} /> {text}\n  </a>\n)\n\nIconLink.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.string,\n  text: PropTypes.string,\n}\n\nIconLink.defaultProps = {\n  href: \"\",\n  icon: \"github\",\n  text: \"\"\n}\n\nexport default IconLink\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport SEO from '../components/seo'\nimport IconLink from '../components/iconlink'\n\nimport styled from 'styled-components'\nimport { space, width, fontSize, color } from 'styled-system'\n\nconst Box = styled.div`\n  ${space}\n  ${width}\n  ${fontSize}\n  ${color}\n`\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`creative`, `web design`, `mobile web designer`, `baltimore`, `justin michaliga`, `jmichaliga`, `logo design`, `mobile web`, `mobile apps`, `web developer`, `front-end`, `front end`, `maryland`, `new york`, `nyc`, `html5`, `javascript`, `east village`]} />\n    <Box width={[1, 1 / 2]}>\n      <article>\n        <p>\n          Several years of professional experience in agency, \n          direct service, and in-house brand capacities &mdash; \n          specializing in Interactive Design, Mobile/Web Development, \n          HTML5 Adoption <abbr title=\"and\" className=\"amp\">&amp;</abbr> User Experiences.\n        </p>\n        <p>\t\t\n          <IconLink href=\"https://twitter.com/jmichaliga\" icon=\"icon\" text=\"Follow @jmichaliga on twitter.\" />\n        </p>\n      </article>\n    </Box>\n    <Box mb={4}>\n      <Image />\n    </Box>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#0AC`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}